//
//  Documentation42.swift
//  LearningSwiftApp
//
//  Created by Thore Brehmer on 19.09.23.
//

import SwiftUI
//takeaways:
//1. using the MARK property highlights text + highlights it on the mini-map. (Mark + "-" adds a little seperation line)
//2. for any struct / class markup the following: PROPERTIES, BODY, FUNCTIONS
//3. there are 3 syntaxes to comment: //, ///, /* */
//4. for complex code add autogenerated documentation by: cmd + leftclick -> createDocumentation
//5. documentation can many fields: https://sarunw.com/posts/swift-documentation/
//6. most important are: description, paras, return, discussion, post, pre, important, warning, attention, note, throws
//7. can use #warning("") #error("") //TODO":" for reminders

struct Documentation42: View {
    //
    // MARK: - PROPERTIES
    
    
    
    //MARK: - BODY
    
    var body: some View {
        Text("")
    }
    
    //MARK: - FUNCTIONS
    
    /// Description
    ///
    /// This will not be autogenerated, but can be manually added. This part is used for the discussion and is in clean english. Needs one empty line from description/title.
    /// Can be multiline. Next line is also not auto generated, but can be used for code examples.
    /// ```
    ///  doSmth(text: hi) -> EmptyView()
    /// ```
    /// - Todo: works
    /// - Author: works
    /// - Attention: ...
    /// - Authors: ...
    /// - Bug: ...
    /// - Complexity: ...
    /// - Copyright: ...
    /// - Date: ...
    /// - Experiment: ...
    /// - Important: ...
    /// - Invariant: ...
    /// - Note: ...
    /// - Postcondition: ...
    /// - Precondition: ...
    /// - Remark: ....
    /// - Requires: ...
    /// - Since: ...
    /// - Version: ...
    /// - Warning: ...
    /// - Throws: ...
    /// - Parameter text: text description
    /// - Returns: description
    func doSmth(text:String) -> some View {
        return EmptyView()
    }
    
    /// Description
    ///
    /// Discussion
    ///```
    ///  CodeBlock
    /// ```
    /// - Todo:
    /// - Author:
    /// - Attention:
    /// - Authors:
    /// - Bug:
    /// - Complexity:
    /// - Copyright:
    /// - Date:
    /// - Experiment:
    /// - Important:
    /// - Invariant:
    /// - Note:
    /// - Postcondition:
    /// - Precondition:
    /// - Remark:
    /// - Requires:
    /// - Since:
    /// - Version:
    /// - Warning:
    /// - Throws:
    /// - Parameters:
    ///   - x: x description
    ///   - text: text description
    /// - Returns: description
    func codeSnippet(x: Int ,text:String) -> some View {
        return EmptyView()
    }
    
    #warning("warning")
    //#error("wont compile")
    //TODO: reminder
}

struct Documentation42_Previews: PreviewProvider {
    static var previews: some View {
        Documentation42()
    }
}


